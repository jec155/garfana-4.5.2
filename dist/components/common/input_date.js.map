{"version":3,"sources":["../../../src/components/common/input_date.js"],"names":["inputDateDirective","restrict","require","link","$scope","$elem","attrs","ngModel","format","fromUser","text","indexOf","dateMath","isValid","$setValidity","undefined","parsed","ctrl","isUtc","moment","utc","toUser","currentValue","isMoment","$parsers","push","$formatters"],"mappings":";;;;;;AAAA;;AAKO,WAASA,kBAAT,GAA8B;AACnC,WAAO;AACLC,gBAAU,GADL;AAELC,eAAS,SAFJ;AAGLC,YAAM,cAAUC,MAAV,EAAkBC,KAAlB,EAAyBC,KAAzB,EAAgCC,OAAhC,EAAyC;AAC7C,YAAIC,SAAS,qBAAb;AACE;AACF,YAAIC,WAAW,SAAXA,QAAW,CAAUC,IAAV,EAAgB;AAC3B;AACF,cAAIA,KAAKC,OAAL,CAAa,KAAb,MAAwB,CAAC,CAA7B,EAAgC;AAC9B,gBAAI,CAACC,SAASC,OAAT,CAAiBH,IAAjB,CAAL,EAA6B;AAC3BH,sBAAQO,YAAR,CAAqB,OAArB,EAA8B,KAA9B;AACA,qBAAOC,SAAP;AACD;AACDR,oBAAQO,YAAR,CAAqB,OAArB,EAA8B,IAA9B;AACA,mBAAOJ,IAAP;AACD;;AAED,cAAIM,MAAJ;AACA,cAAIZ,OAAOa,IAAP,CAAYC,KAAhB,EAAuB;AACrBF,qBAASG,OAAOC,GAAP,CAAWV,IAAX,EAAiBF,MAAjB,CAAT;AACD,WAFD,MAEO;AACLQ,qBAASG,OAAOT,IAAP,EAAaF,MAAb,CAAT;AACD;;AAED,cAAI,CAACQ,OAAOH,OAAP,EAAL,EAAuB;AACrBN,oBAAQO,YAAR,CAAqB,OAArB,EAA8B,KAA9B;AACA,mBAAOC,SAAP;AACD;;AAEDR,kBAAQO,YAAR,CAAqB,OAArB,EAA8B,IAA9B;AACA,iBAAOE,MAAP;AACD,SAzBD;;AA2BA,YAAIK,SAAS,SAATA,MAAS,CAAUC,YAAV,EAAwB;AACnC,cAAIH,OAAOI,QAAP,CAAgBD,YAAhB,CAAJ,EAAmC;AACjC,mBAAOA,aAAad,MAAb,CAAoBA,MAApB,CAAP;AACD,WAFD,MAEO;AACL,mBAAOc,YAAP;AACD;AACF,SAND;;AAQAf,gBAAQiB,QAAR,CAAiBC,IAAjB,CAAsBhB,QAAtB;AACAF,gBAAQmB,WAAR,CAAoBD,IAApB,CAAyBJ,MAAzB;AACD;AA3CI,KAAP;AA6CD;;gCA9CerB,kB;;;;AAHTmB,Y;;AACKP,c","file":"input_date.js","sourcesContent":["///<reference path=\"../../../headers/common.d.ts\" />\r\n\r\nimport moment from 'moment';\r\nimport * as dateMath from 'app/core/utils/datemath';\r\n\r\nexport function inputDateDirective() {\r\n  return {\r\n    restrict: 'A',\r\n    require: 'ngModel',\r\n    link: function ($scope, $elem, attrs, ngModel) {\r\n      var format = 'YYYY-MM-DD HH:mm:ss';\r\n        //console.info(ngModel);\r\n      var fromUser = function (text) {\r\n          //console.info('ere');\r\n        if (text.indexOf('now') !== -1) {\r\n          if (!dateMath.isValid(text)) {\r\n            ngModel.$setValidity(\"error\", false);\r\n            return undefined;\r\n          }\r\n          ngModel.$setValidity(\"error\", true);\r\n          return text;\r\n        }\r\n\r\n        var parsed;\r\n        if ($scope.ctrl.isUtc) {\r\n          parsed = moment.utc(text, format);\r\n        } else {\r\n          parsed = moment(text, format);\r\n        }\r\n\r\n        if (!parsed.isValid()) {\r\n          ngModel.$setValidity(\"error\", false);\r\n          return undefined;\r\n        }\r\n\r\n        ngModel.$setValidity(\"error\", true);\r\n        return parsed;\r\n      };\r\n\r\n      var toUser = function (currentValue) {\r\n        if (moment.isMoment(currentValue)) {\r\n          return currentValue.format(format);\r\n        } else {\r\n          return currentValue;\r\n        }\r\n      };\r\n\r\n      ngModel.$parsers.push(fromUser);\r\n      ngModel.$formatters.push(toUser);\r\n    }\r\n  };\r\n}\r\n\r\n"]}